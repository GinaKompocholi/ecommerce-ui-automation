{"uid":"c7bdaf2d3dcf15b2","name":"[BUG] Checkout mandatory fields are required","fullName":"features/checkout.feature:[BUG] Checkout mandatory fields are required","historyId":"c1e942e2eaafbd5960b17b8ca1a2a95a","time":{"start":1736770607337,"stop":1736770614995,"duration":7658},"status":"failed","statusMessage":"AssertionError: Expected: 'Error: Last Name is required' | Displayed: 'Error: Postal Code is required'\nassert 'Error: Last Name is required' == 'Error: Postal Code is required'\n  \n  - Error: Postal Code is required\n  ?        ^^   ^^^^^\n  + Error: Last Name is required\n  ?        ^^  ++ ^","statusTrace":"fixturefunc = <function add_product_to_cart at 0x7f3a10f0f380>\nrequest = <FixtureRequest for <Function test_bug_checkout_mandatory_fields_are_required>>\nkwargs = {'checkout_page': <ui_automation_suite.bdd_tests.page_objects.checkout_page.CheckoutPage object at 0x7f3a0f830390>, 'mandatory_field': 'Last Name'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/ui-automation-suite-sxdfqp51-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmandatory_field = 'Last Name'\ncheckout_page = <ui_automation_suite.bdd_tests.page_objects.checkout_page.CheckoutPage object at 0x7f3a0f830390>\n\n    @then(parsers.cfparse(\"error message '{mandatory_field} is required' is displayed\"))\n    def add_product_to_cart(mandatory_field, checkout_page: CheckoutPage):\n        assert checkout_page.error_displayed(), \"Error message is not displayed\"\n        displayed_error_message = checkout_page.get_displayed_error_message()\n        logging.info(f\"Displayed error message: {displayed_error_message}\")\n    \n        error_messages = {\n            \"First Name\": \"Error: First Name is required\",\n            \"Last Name\": \"Error: Last Name is required\",\n            \"Postal Code\": \"Error: Postal Code is required\",\n        }\n        expected_error_message = error_messages[mandatory_field]\n    \n>       assert (\n            expected_error_message == displayed_error_message\n        ), f\"Expected: '{expected_error_message}' | Displayed: '{displayed_error_message}'\"\nE       AssertionError: Expected: 'Error: Last Name is required' | Displayed: 'Error: Postal Code is required'\nE       assert 'Error: Last Name is required' == 'Error: Postal Code is required'\nE         \nE         - Error: Postal Code is required\nE         ?        ^^   ^^^^^\nE         + Error: Last Name is required\nE         ?        ^^  ++ ^\n\nui_automation_suite/bdd_tests/step_defs/test_checkout.py:63: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: Expected: 'Error: Last Name is required' | Displayed: 'Error: Postal Code is required'\nassert 'Error: Last Name is required' == 'Error: Postal Code is required'\n  \n  - Error: Postal Code is required\n  ?        ^^   ^^^^^\n  + Error: Last Name is required\n  ?        ^^  ++ ^","statusTrace":"fixturefunc = <function add_product_to_cart at 0x7f3a10f0f380>\nrequest = <FixtureRequest for <Function test_bug_checkout_mandatory_fields_are_required>>\nkwargs = {'checkout_page': <ui_automation_suite.bdd_tests.page_objects.checkout_page.CheckoutPage object at 0x7f3a0f830390>, 'mandatory_field': 'Last Name'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/ui-automation-suite-sxdfqp51-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmandatory_field = 'Last Name'\ncheckout_page = <ui_automation_suite.bdd_tests.page_objects.checkout_page.CheckoutPage object at 0x7f3a0f830390>\n\n    @then(parsers.cfparse(\"error message '{mandatory_field} is required' is displayed\"))\n    def add_product_to_cart(mandatory_field, checkout_page: CheckoutPage):\n        assert checkout_page.error_displayed(), \"Error message is not displayed\"\n        displayed_error_message = checkout_page.get_displayed_error_message()\n        logging.info(f\"Displayed error message: {displayed_error_message}\")\n    \n        error_messages = {\n            \"First Name\": \"Error: First Name is required\",\n            \"Last Name\": \"Error: Last Name is required\",\n            \"Postal Code\": \"Error: Postal Code is required\",\n        }\n        expected_error_message = error_messages[mandatory_field]\n    \n>       assert (\n            expected_error_message == displayed_error_message\n        ), f\"Expected: '{expected_error_message}' | Displayed: '{displayed_error_message}'\"\nE       AssertionError: Expected: 'Error: Last Name is required' | Displayed: 'Error: Postal Code is required'\nE       assert 'Error: Last Name is required' == 'Error: Postal Code is required'\nE         \nE         - Error: Postal Code is required\nE         ?        ^^   ^^^^^\nE         + Error: Last Name is required\nE         ?        ^^  ++ ^\n\nui_automation_suite/bdd_tests/step_defs/test_checkout.py:63: AssertionError","steps":[{"name":"Given the login page is displayed","time":{"start":1736770607338,"stop":1736770608605,"duration":1267},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"When user tries to login with error_user","time":{"start":1736770608605,"stop":1736770610683,"duration":2078},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Then user is redirected to the products page","time":{"start":1736770610684,"stop":1736770610684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"When user adds product Onesie to the cart","time":{"start":1736770610684,"stop":1736770611479,"duration":795},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"And user navigates to the shopping cart","time":{"start":1736770611479,"stop":1736770612175,"duration":696},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Then the cart icon displays 1 product(s)","time":{"start":1736770612175,"stop":1736770612186,"duration":11},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"When user proceeds to checkout","time":{"start":1736770612187,"stop":1736770612885,"duration":698},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Then user lands on checkout Information","time":{"start":1736770612886,"stop":1736770612892,"duration":6},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"When user clicks on Continue","time":{"start":1736770612892,"stop":1736770613587,"duration":695},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Then error message 'First Name is required' is displayed","time":{"start":1736770613588,"stop":1736770613602,"duration":14},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"When user fills in First Name","time":{"start":1736770613602,"stop":1736770614288,"duration":686},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"And user clicks on Continue","time":{"start":1736770614288,"stop":1736770614983,"duration":695},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Then error message 'Last Name is required' is displayed","time":{"start":1736770614984,"stop":1736770614995,"duration":11},"status":"failed","statusMessage":"Expected: 'Error: Last Name is required' | Displayed: 'Error: Postal Code is required'\nassert 'Error: Last Name is required' == 'Error: Postal Code is required'\n  \n  - Error: Postal Code is required\n  ?        ^^   ^^^^^\n  + Error: Last Name is required\n  ?        ^^  ++ ^","statusTrace":"AssertionError: Expected: 'Error: Last Name is required' | Displayed: 'Error: Postal Code is required'\nassert 'Error: Last Name is required' == 'Error: Postal Code is required'\n  \n  - Error: Postal Code is required\n  ?        ^^   ^^^^^\n  + Error: Last Name is required\n  ?        ^^  ++ ^\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[{"uid":"72546016c5ed288f","name":"Step failure!","source":"72546016c5ed288f.txt","type":"text/plain","size":111},{"uid":"2d054f897d3e7a98","name":"trace_test_bug_checkout_mandatory_fields_are_required.zip","source":"2d054f897d3e7a98.zip","type":"application/zip","size":494346},{"uid":"a4f9f46bbcd024de","name":"log","source":"a4f9f46bbcd024de.txt","type":"text/plain","size":960}],"parameters":[],"stepsCount":13,"attachmentsCount":3,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az810-368"},{"name":"thread","value":"6437-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Checkout"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"c7bdaf2d3dcf15b2.json","parameterValues":[]}