name: Run UI Tests

on:
  workflow_dispatch:
    inputs:
      marker:
        description: "Test marker to run specific tests"
        required: false
        default: "regression"

  pull_request:
    branches:
      - "**" # Run on pull requests for all branches

permissions:
  contents: write

jobs:
  run-tests:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      # Install dependencies and Playwright browsers
      - name: Install dependencies
        run: |
          pip install poetry
          poetry install
          poetry run playwright install --with-deps

      # Step 4: Install Allure CLI
      - name: Install Allure CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y openjdk-11-jre-headless  # Required for Allure
          curl -sL https://github.com/allure-framework/allure2/releases/download/2.20.1/allure-2.20.1.tgz | tar -xz -C /opt/
          sudo ln -s /opt/allure-2.20.1/bin/allure /usr/bin/allure

      # Set environment variables from GitHub Secrets
      - name: Set environment variables
        run: echo "PASSWORD=${{ secrets.PASSWORD }}" >> $GITHUB_ENV

      # Run pytest with the provided marker or regression
      - name: Run tests
        env:
          PASSWORD: ${{ secrets.PASSWORD }}  # Pass the secret to the test environment
        run: |
          marker="${{ github.event.inputs.marker }}"
          if [ -z "$marker" ]; then
            marker="regression"
          fi
          echo "Running tests with marker: $marker"
          poetry run make test "MARKER=$marker"


      # enerate Allure HTML report using Makefile
      - name: Generate Allure Report
        if: always()  # Ensures this step runs even if the previous step fails
        run: |
          poetry run make generate-report

      # Option1: Upload Allure Report as an artifact to download and view
      - name: Upload Allure Report
        if: always()  # Ensures this step runs even if the previous step fails
        uses: actions/upload-artifact@v3
        with:
          name: allure-report
          path: ui_automation_suite/bdd_tests/reports/allure-report-bdd

      # Option2: Deploy Allure Report to GitHub Pages for easy access
      - name: Deploy Allure Report to GitHub Pages
        if: always()  # Ensures this step runs even if the previous step fails
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ui_automation_suite/bdd_tests/reports/allure-report-bdd
